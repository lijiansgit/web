<!DOCTYPE html>
<html lang="en">
<head profile="http://a9.com/-/spec/opensearch/1.1/">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="/static/css/site.css" rel="stylesheet">
  <title>debug/gosym</title>
  
    <meta name="twitter:title" content="Package gosym">
    <meta property="og:title" content="Package gosym">
    <meta name="description" content="Package gosym implements access to the Go symbol and line number tables embedded in Go binaries generated by the gc compilers.">
    <meta name="twitter:description" content="Package gosym implements access to the Go symbol and line number tables embedded in Go binaries generated by the gc compilers.">
    <meta property="og:description" content="Package gosym implements access to the Go symbol and line number tables embedded in Go binaries generated by the gc compilers.">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@golang">
  
  

  

</head>
<body>
<div class="container">
        <h2 id="pkg-overview">package gosym</h2>

        <p><code>import "debug/gosym"</code>

        <p>
Package gosym implements access to the Go symbol
and line number tables embedded in Go binaries generated
by the gc compilers.</p>


        
  


        
        <h3 id="pkg-index" class="section-header">Index <a class="permalink" href="#pkg-index">&para;</a></h3>

        

        <ul class="list-unstyled">
          
          
          
          
            <li><a href="#DecodingError">type DecodingError</a></li>
            <ul>
            
            <li><a href="#DecodingError.Error">func (e *DecodingError) Error() string</a></li>
            </ul>
          
            <li><a href="#Func">type Func</a></li>
            
            
            
            
          
            <li><a href="#LineTable">type LineTable</a></li>
            <ul>
            <li><a href="#NewLineTable">func NewLineTable(data []byte, text uint64) *LineTable</a></li>
            <li><a href="#LineTable.LineToPC">func (t *LineTable) LineToPC(line int, maxpc uint64) uint64</a></li><li><a href="#LineTable.PCToLine">func (t *LineTable) PCToLine(pc uint64) int</a></li>
            </ul>
          
            <li><a href="#Obj">type Obj</a></li>
            
            
            
            
          
            <li><a href="#Sym">type Sym</a></li>
            <ul>
            
            <li><a href="#Sym.BaseName">func (s *Sym) BaseName() string</a></li><li><a href="#Sym.PackageName">func (s *Sym) PackageName() string</a></li><li><a href="#Sym.ReceiverName">func (s *Sym) ReceiverName() string</a></li><li><a href="#Sym.Static">func (s *Sym) Static() bool</a></li>
            </ul>
          
            <li><a href="#Table">type Table</a></li>
            <ul>
            <li><a href="#NewTable">func NewTable(symtab []byte, pcln *LineTable) (*Table, error)</a></li>
            <li><a href="#Table.LineToPC">func (t *Table) LineToPC(file string, line int) (pc uint64, fn *Func, err error)</a></li><li><a href="#Table.LookupFunc">func (t *Table) LookupFunc(name string) *Func</a></li><li><a href="#Table.LookupSym">func (t *Table) LookupSym(name string) *Sym</a></li><li><a href="#Table.PCToFunc">func (t *Table) PCToFunc(pc uint64) *Func</a></li><li><a href="#Table.PCToLine">func (t *Table) PCToLine(pc uint64) (file string, line int, fn *Func)</a></li><li><a href="#Table.SymByAddr">func (t *Table) SymByAddr(addr uint64) *Sym</a></li>
            </ul>
          
            <li><a href="#UnknownFileError">type UnknownFileError</a></li>
            <ul>
            
            <li><a href="#UnknownFileError.Error">func (e UnknownFileError) Error() string</a></li>
            </ul>
          
            <li><a href="#UnknownLineError">type UnknownLineError</a></li>
            <ul>
            
            <li><a href="#UnknownLineError.Error">func (e *UnknownLineError) Error() string</a></li>
            </ul>
          
          
        </ul>

        
        
          <span id="pkg-examples"></span>
        

        
        
<h4 id="pkg-files">
  <a href="https://github.com/golang/go/blob/master/src/debug/gosym/">Package Files</a>
  <a class="permalink" href="#pkg-files">&para;</a>
</h4>

<p><a href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go">pclntab.go</a> <a href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go">symtab.go</a> </p>

        
        

        
        

        
        
        

        
        

        
          <h3 id="DecodingError" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L706">DecodingError</a> <a class="permalink" href="#DecodingError">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=DecodingError&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L706"></a><pre>type DecodingError struct {
    <span class="com">// contains filtered or unexported fields</span>
}</pre></div><p>
DecodingError represents an error during the decoding of
the symbol table.
</p>

          
          
          
  


          

          
            <h4 id="DecodingError.Error" data-kind="m">func (*DecodingError) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L712">Error</a> <a class="permalink" href="#DecodingError.Error">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=DecodingError%2FError&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L712"></a><pre>func (e *<a href="#DecodingError">DecodingError</a>) Error() <a href="/builtin#string">string</a></pre></div>
            
  

          
        
          <h3 id="Func" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L78">Func</a> <a class="permalink" href="#Func">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=Func&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L78"></a><pre>type Func struct {
    <span id="Func.Entry">Entry</span> <a href="/builtin#uint64">uint64</a>
    *<a href="#Sym">Sym</a>
    <span id="Func.End">End</span>       <a href="/builtin#uint64">uint64</a>
    <span id="Func.Params">Params</span>    []*<a href="#Sym">Sym</a>
    <span id="Func.Locals">Locals</span>    []*<a href="#Sym">Sym</a>
    <span id="Func.FrameSize">FrameSize</span> <a href="/builtin#int">int</a>
    <span id="Func.LineTable">LineTable</span> *<a href="#LineTable">LineTable</a>
    <span id="Func.Obj">Obj</span>       *<a href="#Obj">Obj</a>
}</pre></div><p>
A Func collects information about a single function.
</p>

          
          
          
  


          

          
        
          <h3 id="LineTable" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L29">LineTable</a> <a class="permalink" href="#LineTable">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=LineTable&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L29"></a><pre>type LineTable struct {
    <span id="LineTable.Data">Data</span> []<a href="/builtin#byte">byte</a>
    <span id="LineTable.PC">PC</span>   <a href="/builtin#uint64">uint64</a>
    <span id="LineTable.Line">Line</span> <a href="/builtin#int">int</a>
    <span class="com">// contains filtered or unexported fields</span>
}</pre></div><p>
A LineTable is a data structure mapping program counters to line numbers.
</p>
<p>
In Go 1.1 and earlier, each function (represented by a Func) had its own LineTable,
and the line number corresponded to a numbering of all source lines in the
program, across all files. That absolute line number would then have to be
converted separately to a file name and line number within the file.
</p>
<p>
In Go 1.2, the format of the data changed so that there is a single LineTable
for the entire program, shared by all Funcs, and there are no absolute line
numbers, just line numbers within specific files.
</p>
<p>
For the most part, LineTable&#39;s methods should be treated as an internal
detail of the package; callers should use the methods on Table instead.
</p>

          
          
          
  


          
            <h4 id="NewLineTable" data-kind="f">func <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L122">NewLineTable</a> <a class="permalink" href="#NewLineTable">&para;</a> <a class="uses" title="List Function Callers" href="https://sourcegraph.com/-/godoc/refs?def=NewLineTable&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L122"></a><pre>func NewLineTable(data []<a href="/builtin#byte">byte</a>, text <a href="/builtin#uint64">uint64</a>) *<a href="#LineTable">LineTable</a></pre></div><p>
NewLineTable returns a new PC/line table
corresponding to the encoded data.
Text must be the start address of the
corresponding text segment.
</p>

            
  

          

          
            <h4 id="LineTable.LineToPC" data-kind="m">func (*LineTable) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L106">LineToPC</a> <a class="permalink" href="#LineTable.LineToPC">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=LineTable%2FLineToPC&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L106"></a><pre>func (t *<a href="#LineTable">LineTable</a>) LineToPC(line <a href="/builtin#int">int</a>, maxpc <a href="/builtin#uint64">uint64</a>) <a href="/builtin#uint64">uint64</a></pre></div><p>
LineToPC returns the program counter for the given line number,
considering only program counters before maxpc.
Callers should use Table&#39;s LineToPC method instead.
</p>

            
  

          
            <h4 id="LineTable.PCToLine" data-kind="m">func (*LineTable) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L95">PCToLine</a> <a class="permalink" href="#LineTable.PCToLine">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=LineTable%2FPCToLine&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/pclntab.go#L95"></a><pre>func (t *<a href="#LineTable">LineTable</a>) PCToLine(pc <a href="/builtin#uint64">uint64</a>) <a href="/builtin#int">int</a></pre></div><p>
PCToLine returns the line number for the given program counter.
Callers should use Table&#39;s PCToLine method instead.
</p>

            
  

          
        
          <h3 id="Obj" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L100">Obj</a> <a class="permalink" href="#Obj">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=Obj&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L100"></a><pre>type Obj struct {
    <span class="com">// Funcs is a list of functions in the Obj.</span>
    <span id="Obj.Funcs">Funcs</span> []<a href="#Func">Func</a>

    <span class="com">// In Go 1.1 and earlier, Paths is a list of symbols corresponding
    // to the source file names that produced the Obj.
    // In Go 1.2, Paths is nil.
    // Use the keys of Table.Files to obtain a list of source files.</span>
    <span id="Obj.Paths">Paths</span> []<a href="#Sym">Sym</a> <span class="com">// meta</span>
}</pre></div><p>
An Obj represents a collection of functions in a symbol table.
</p>
<p>
The exact method of division of a binary into separate Objs is an internal detail
of the symbol table format.
</p>
<p>
In early versions of Go each source file became a different Obj.
</p>
<p>
In Go 1 and Go 1.1, each package produced one Obj for all Go sources
and one Obj per C source file.
</p>
<p>
In Go 1.2, there is a single Obj for the entire program.
</p>

          
          
          
  


          

          
        
          <h3 id="Sym" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L28">Sym</a> <a class="permalink" href="#Sym">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=Sym&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L28"></a><pre>type Sym struct {
    <span id="Sym.Value">Value</span>  <a href="/builtin#uint64">uint64</a>
    <span id="Sym.Type">Type</span>   <a href="/builtin#byte">byte</a>
    <span id="Sym.Name">Name</span>   <a href="/builtin#string">string</a>
    <span id="Sym.GoType">GoType</span> <a href="/builtin#uint64">uint64</a>
    <span class="com">// If this symbol is a function symbol, the corresponding Func</span>
    <span id="Sym.Func">Func</span> *<a href="#Func">Func</a>
}</pre></div><p>
A Sym represents a single symbol table entry.
</p>

          
          
          
  


          

          
            <h4 id="Sym.BaseName" data-kind="m">func (*Sym) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L70">BaseName</a> <a class="permalink" href="#Sym.BaseName">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Sym%2FBaseName&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L70"></a><pre>func (s *<a href="#Sym">Sym</a>) BaseName() <a href="/builtin#string">string</a></pre></div><p>
BaseName returns the symbol name without the package or receiver name.
</p>

            
  

          
            <h4 id="Sym.PackageName" data-kind="m">func (*Sym) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L42">PackageName</a> <a class="permalink" href="#Sym.PackageName">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Sym%2FPackageName&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L42"></a><pre>func (s *<a href="#Sym">Sym</a>) PackageName() <a href="/builtin#string">string</a></pre></div><p>
PackageName returns the package part of the symbol name,
or the empty string if there is none.
</p>

            
  

          
            <h4 id="Sym.ReceiverName" data-kind="m">func (*Sym) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L56">ReceiverName</a> <a class="permalink" href="#Sym.ReceiverName">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Sym%2FReceiverName&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L56"></a><pre>func (s *<a href="#Sym">Sym</a>) ReceiverName() <a href="/builtin#string">string</a></pre></div><p>
ReceiverName returns the receiver type name of this symbol,
or the empty string if there is none.
</p>

            
  

          
            <h4 id="Sym.Static" data-kind="m">func (*Sym) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L38">Static</a> <a class="permalink" href="#Sym.Static">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Sym%2FStatic&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L38"></a><pre>func (s *<a href="#Sym">Sym</a>) Static() <a href="/builtin#bool">bool</a></pre></div><p>
Static reports whether this symbol is static (not visible outside its file).
</p>

            
  

          
        
          <h3 id="Table" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L118">Table</a> <a class="permalink" href="#Table">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=Table&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L118"></a><pre>type Table struct {
    <span id="Table.Syms">Syms</span>  []<a href="#Sym">Sym</a>
    <span id="Table.Funcs">Funcs</span> []<a href="#Func">Func</a>
    <span id="Table.Files">Files</span> map[<a href="/builtin#string">string</a>]*<a href="#Obj">Obj</a> <span class="com">// nil for Go 1.2 and later binaries</span>
    <span id="Table.Objs">Objs</span>  []<a href="#Obj">Obj</a>           <span class="com">// nil for Go 1.2 and later binaries
    // contains filtered or unexported fields</span>
}</pre></div><p>
Table represents a Go symbol table. It stores all of the
symbols decoded from the program and provides methods to translate
between symbols, names, and addresses.
</p>

          
          
          
  


          
            <h4 id="NewTable" data-kind="f">func <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L282">NewTable</a> <a class="permalink" href="#NewTable">&para;</a> <a class="uses" title="List Function Callers" href="https://sourcegraph.com/-/godoc/refs?def=NewTable&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L282"></a><pre>func NewTable(symtab []<a href="/builtin#byte">byte</a>, pcln *<a href="#LineTable">LineTable</a>) (*<a href="#Table">Table</a>, <a href="/builtin#error">error</a>)</pre></div><p>
NewTable decodes the Go symbol table in data,
returning an in-memory representation.
</p>

            
  

          

          
            <h4 id="Table.LineToPC" data-kind="m">func (*Table) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L517">LineToPC</a> <a class="permalink" href="#Table.LineToPC">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Table%2FLineToPC&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L517"></a><pre>func (t *<a href="#Table">Table</a>) LineToPC(file <a href="/builtin#string">string</a>, line <a href="/builtin#int">int</a>) (pc <a href="/builtin#uint64">uint64</a>, fn *<a href="#Func">Func</a>, err <a href="/builtin#error">error</a>)</pre></div><p>
LineToPC looks up the first program counter on the given line in
the named file. It returns UnknownPathError or UnknownLineError if
there is an error looking up this line.
</p>

            
  

          
            <h4 id="Table.LookupFunc" data-kind="m">func (*Table) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L563">LookupFunc</a> <a class="permalink" href="#Table.LookupFunc">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Table%2FLookupFunc&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L563"></a><pre>func (t *<a href="#Table">Table</a>) LookupFunc(name <a href="/builtin#string">string</a>) *<a href="#Func">Func</a></pre></div><p>
LookupFunc returns the text, data, or bss symbol with the given name,
or nil if no such symbol is found.
</p>

            
  

          
            <h4 id="Table.LookupSym" data-kind="m">func (*Table) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L547">LookupSym</a> <a class="permalink" href="#Table.LookupSym">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Table%2FLookupSym&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L547"></a><pre>func (t *<a href="#Table">Table</a>) LookupSym(name <a href="/builtin#string">string</a>) *<a href="#Sym">Sym</a></pre></div><p>
LookupSym returns the text, data, or bss symbol with the given name,
or nil if no such symbol is found.
</p>

            
  

          
            <h4 id="Table.PCToFunc" data-kind="m">func (*Table) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L482">PCToFunc</a> <a class="permalink" href="#Table.PCToFunc">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Table%2FPCToFunc&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L482"></a><pre>func (t *<a href="#Table">Table</a>) PCToFunc(pc <a href="/builtin#uint64">uint64</a>) *<a href="#Func">Func</a></pre></div><p>
PCToFunc returns the function containing the program counter pc,
or nil if there is no such function.
</p>

            
  

          
            <h4 id="Table.PCToLine" data-kind="m">func (*Table) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L501">PCToLine</a> <a class="permalink" href="#Table.PCToLine">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Table%2FPCToLine&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L501"></a><pre>func (t *<a href="#Table">Table</a>) PCToLine(pc <a href="/builtin#uint64">uint64</a>) (file <a href="/builtin#string">string</a>, line <a href="/builtin#int">int</a>, fn *<a href="#Func">Func</a>)</pre></div><p>
PCToLine looks up line number information for a program counter.
If there is no information, it returns fn == nil.
</p>

            
  

          
            <h4 id="Table.SymByAddr" data-kind="m">func (*Table) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L574">SymByAddr</a> <a class="permalink" href="#Table.SymByAddr">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Table%2FSymByAddr&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L574"></a><pre>func (t *<a href="#Table">Table</a>) SymByAddr(addr <a href="/builtin#uint64">uint64</a>) *<a href="#Sym">Sym</a></pre></div><p>
SymByAddr returns the text, data, or bss symbol starting at the given address.
</p>

            
  

          
        
          <h3 id="UnknownFileError" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L688">UnknownFileError</a> <a class="permalink" href="#UnknownFileError">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=UnknownFileError&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L688"></a><pre>type UnknownFileError <a href="/builtin#string">string</a></pre></div><p>
UnknownFileError represents a failure to find the specific file in
the symbol table.
</p>

          
          
          
  


          

          
            <h4 id="UnknownFileError.Error" data-kind="m">func (UnknownFileError) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L690">Error</a> <a class="permalink" href="#UnknownFileError.Error">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=UnknownFileError%2FError&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L690"></a><pre>func (e <a href="#UnknownFileError">UnknownFileError</a>) Error() <a href="/builtin#string">string</a></pre></div>
            
  

          
        
          <h3 id="UnknownLineError" data-kind="t">type <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L695">UnknownLineError</a> <a class="permalink" href="#UnknownLineError">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=UnknownLineError&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L695"></a><pre>type UnknownLineError struct {
    <span id="UnknownLineError.File">File</span> <a href="/builtin#string">string</a>
    <span id="UnknownLineError.Line">Line</span> <a href="/builtin#int">int</a>
}</pre></div><p>
UnknownLineError represents a failure to map a line to a program
counter, either because the line is beyond the bounds of the file
or because there is no code on the given line.
</p>

          
          
          
  


          

          
            <h4 id="UnknownLineError.Error" data-kind="m">func (*UnknownLineError) <a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L700">Error</a> <a class="permalink" href="#UnknownLineError.Error">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=UnknownLineError%2FError&amp;pkg=debug%2Fgosym&amp;repo=">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/go/blob/master/src/debug/gosym/symtab.go#L700"></a><pre>func (e *<a href="#UnknownLineError">UnknownLineError</a>) Error() <a href="/builtin#string">string</a></pre></div>
            
<div id="x-footer" class="clearfix">
  <div class="container">
    <a href="http://www.lijian.site/" target="_blank">GOLANG.GROUP</a>
    <span class="text-muted">|</span> <a href="http://golang.org/" target="_blank">GOLANG.ORG</a>
    <span class="pull-right"><a href="#">Back to top</a></span>
  </div>
</div>
<script src="/static/js/jquery.min.js"></script>
<script src="/static/js/bootstrap.min.js"></script>
<script src="/static/js/site.js"></script>
</body>
</html>
